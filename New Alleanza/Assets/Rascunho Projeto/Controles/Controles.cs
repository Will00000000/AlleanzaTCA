//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Rascunho Projeto/Controles/Controles.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controles: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controles()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controles"",
    ""maps"": [
        {
            ""name"": ""JogadorTop"",
            ""id"": ""ce14d94e-8496-4963-9fad-5e56e6244af1"",
            ""actions"": [
                {
                    ""name"": ""Andar"",
                    ""type"": ""Value"",
                    ""id"": ""3256b99c-cffc-4557-aa3f-a1dfadee8ced"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""ce35e19d-6313-4a3b-a328-872091245eeb"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Andar"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""316fa8f2-be1f-4e6c-96a8-14493271d468"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Andar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e13bf57d-404b-4a3b-afbc-e4e92f9bd5ef"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Andar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""75166dab-3bb4-42ab-91cd-e76db735268b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Andar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8af2e668-227c-4362-8d14-901479236a45"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Andar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Jogador2D"",
            ""id"": ""d8910be1-f476-463a-9034-43f961d0f2e4"",
            ""actions"": [
                {
                    ""name"": ""Mover"",
                    ""type"": ""Value"",
                    ""id"": ""976cc41f-78d1-426a-b794-dbd22206d6d2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Value"",
                    ""id"": ""90d41190-4594-4b56-87ba-3a782fa5882a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""904bfc8a-b07c-4125-a43a-4bec4f7c0b32"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ba1b55bf-14bd-463d-8409-4c129e8840c7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cc69e78e-bb5e-4ad5-8efb-bd7a8be0d365"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d384bf67-19fd-4689-8ec5-a2fdc83f503b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""36dcd4f5-4ce2-4be6-baa7-88541bca46c1"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""026663a7-8d0a-4743-b05d-640741ab0c5e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""74392aa9-a7f7-4295-9e85-c15c141c6679"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7e719697-4cdc-4c00-9f65-3e278fc76626"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // JogadorTop
        m_JogadorTop = asset.FindActionMap("JogadorTop", throwIfNotFound: true);
        m_JogadorTop_Andar = m_JogadorTop.FindAction("Andar", throwIfNotFound: true);
        // Jogador2D
        m_Jogador2D = asset.FindActionMap("Jogador2D", throwIfNotFound: true);
        m_Jogador2D_Mover = m_Jogador2D.FindAction("Mover", throwIfNotFound: true);
        m_Jogador2D_Dash = m_Jogador2D.FindAction("Dash", throwIfNotFound: true);
    }

    ~@Controles()
    {
        UnityEngine.Debug.Assert(!m_JogadorTop.enabled, "This will cause a leak and performance issues, Controles.JogadorTop.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Jogador2D.enabled, "This will cause a leak and performance issues, Controles.Jogador2D.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // JogadorTop
    private readonly InputActionMap m_JogadorTop;
    private List<IJogadorTopActions> m_JogadorTopActionsCallbackInterfaces = new List<IJogadorTopActions>();
    private readonly InputAction m_JogadorTop_Andar;
    public struct JogadorTopActions
    {
        private @Controles m_Wrapper;
        public JogadorTopActions(@Controles wrapper) { m_Wrapper = wrapper; }
        public InputAction @Andar => m_Wrapper.m_JogadorTop_Andar;
        public InputActionMap Get() { return m_Wrapper.m_JogadorTop; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(JogadorTopActions set) { return set.Get(); }
        public void AddCallbacks(IJogadorTopActions instance)
        {
            if (instance == null || m_Wrapper.m_JogadorTopActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_JogadorTopActionsCallbackInterfaces.Add(instance);
            @Andar.started += instance.OnAndar;
            @Andar.performed += instance.OnAndar;
            @Andar.canceled += instance.OnAndar;
        }

        private void UnregisterCallbacks(IJogadorTopActions instance)
        {
            @Andar.started -= instance.OnAndar;
            @Andar.performed -= instance.OnAndar;
            @Andar.canceled -= instance.OnAndar;
        }

        public void RemoveCallbacks(IJogadorTopActions instance)
        {
            if (m_Wrapper.m_JogadorTopActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IJogadorTopActions instance)
        {
            foreach (var item in m_Wrapper.m_JogadorTopActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_JogadorTopActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public JogadorTopActions @JogadorTop => new JogadorTopActions(this);

    // Jogador2D
    private readonly InputActionMap m_Jogador2D;
    private List<IJogador2DActions> m_Jogador2DActionsCallbackInterfaces = new List<IJogador2DActions>();
    private readonly InputAction m_Jogador2D_Mover;
    private readonly InputAction m_Jogador2D_Dash;
    public struct Jogador2DActions
    {
        private @Controles m_Wrapper;
        public Jogador2DActions(@Controles wrapper) { m_Wrapper = wrapper; }
        public InputAction @Mover => m_Wrapper.m_Jogador2D_Mover;
        public InputAction @Dash => m_Wrapper.m_Jogador2D_Dash;
        public InputActionMap Get() { return m_Wrapper.m_Jogador2D; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Jogador2DActions set) { return set.Get(); }
        public void AddCallbacks(IJogador2DActions instance)
        {
            if (instance == null || m_Wrapper.m_Jogador2DActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Jogador2DActionsCallbackInterfaces.Add(instance);
            @Mover.started += instance.OnMover;
            @Mover.performed += instance.OnMover;
            @Mover.canceled += instance.OnMover;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
        }

        private void UnregisterCallbacks(IJogador2DActions instance)
        {
            @Mover.started -= instance.OnMover;
            @Mover.performed -= instance.OnMover;
            @Mover.canceled -= instance.OnMover;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
        }

        public void RemoveCallbacks(IJogador2DActions instance)
        {
            if (m_Wrapper.m_Jogador2DActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IJogador2DActions instance)
        {
            foreach (var item in m_Wrapper.m_Jogador2DActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Jogador2DActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Jogador2DActions @Jogador2D => new Jogador2DActions(this);
    public interface IJogadorTopActions
    {
        void OnAndar(InputAction.CallbackContext context);
    }
    public interface IJogador2DActions
    {
        void OnMover(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
    }
}
